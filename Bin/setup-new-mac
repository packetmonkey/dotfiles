#!/usr/bin/env bash

# Bash Strict Mode
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

# set -x

# Steps not yet automated
# - Set DuckDuckGo as default safari search engine (Safari/Settings/Search/Search Engine)
# - Enable Messages in iCloud (Messages/Settings/iMessage)
# - Enable SSH agent in 1Password
# - Configure Apple Mail for 
# - Install and Configure VSCode Extensions
# - Textual 7
#   - Adding "Textual 7.app" to the doc (space throwing it off?)
#   - Accepting Custom TLS cert for ZNC
# - Terminal
#   - Adjusting the transparency of the terminal from 85 to 90
#   - Setting terminal font to operator mono
#   - Enabling Anti-Aliased Fonts
#   - Close windows when shell exits
# - Enable icloud calendars in fantastical
# - Set Hostname (need to check CPU for intel vs M1 MBPs vs other systems later)
# - Backblaze getts the installer downloaded by Homebrew but not sure how to check it has been ran and to
#   therefore prompt it's running
#   - Possibly we can see if `bztransmit` is running or something similar as a heuristic
# - Set screensaver require password after screen saver begins or display is turned off After 5 seconds
# - Zoom
#   - Enable screen recording (for screen sharing)

icloud_drive="$HOME/Library/Mobile Documents/com~apple~CloudDocs"

# Dotfiles
echo "üìÇ Adding Dotfiles"
[ ! -L "$HOME/.zshrc" ] && ln -s "$icloud_drive/dotfiles/zshrc" "$HOME/.zshrc"
echo "‚úÖ .zshrc"

mkdir -p "$HOME/.ssh"
[ ! -L "$HOME/.ssh/config" ] && ln -s "$icloud_drive/dotfiles/ssh/config" "$HOME/.ssh/config"
echo "‚úÖ .ssh/config"

mkdir -p "$HOME/.config/git"
[ ! -L "$HOME/.config/git/config" ] && ln -s "$icloud_drive/dotfiles/config/git/config" "$HOME/.config/git/config"
echo "‚úÖ .config/git/config"
[ ! -L "$HOME/.config/git/ignore" ] && ln -s "$icloud_drive/dotfiles/config/git/ignore" "$HOME/.config/git/ignore"
echo "‚úÖ .config/git/ignore"

mkdir -p "$HOME/.config/nvim"
[ ! -L "$HOME/.config/nvim/init.lua" ] && ln -s "$icloud_drive/dotfiles/config/nvim/init.lua" "$HOME/.config/nvim/init.lua"
echo "‚úÖ .config/nvim/init.lua"

# Homebrew
if command -v /opt/homebrew/bin/brew > /dev/null; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
else
  /bin/bash -c "$(curl --fail --silent --show-error --location https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi
brew analytics off

# Homebrew Packages
echo ""
echo "üç∫ Installing Homebrew Packages"
for package in neovim 1password shellcheck alfred mas git git-lfs htop netnewswire ruby-install chruby starship obsidian bat jq ripgrep visual-studio-code soulver vlc tor-browser zoom whatsapp graphviz omnifocus yt-dlp omnigraffle monodraw fantastical backblaze 1password-cli tree raspberry-pi-imager watch grammarly-desktop firefox google-chrome fzf little-snitch ffmpeg github discord; do
  if brew list "${package}" > /dev/null 2>&1; then
    echo "‚úÖ ${package} already installed"
  else
    brew install "$package"
  fi
done

# Mac App Store
echo ""
echo "üßë‚Äçüíª Installing Mac App Store apps"
for slug in Numbers-409203825 Pocket-568494494 PocketForSafari-1477385213 1PasswordForSafari-1569813296 Textual-1262957439 Parcel-639968404 Ghostery-1436953057 GrammarlySafari-1462114288; do
  name=$(echo "$slug" | cut -d'-' -f1)
  id=$(echo "$slug" | cut -d'-' -f2)

  if mas list | grep -q "^${id}"; then
    echo "‚úÖ ${name} already installed"
    true
  else
    mas install "$id"
  fi
done

# Add applications to dock
echo ""
echo "üñ•Ô∏è Adding applications to the dock"
for name in 1Password.app Pocket.app NetNewsWire.app Obsidian.app OmniFocus.app Fantastical.app Discord.app; do
  if defaults read com.apple.dock persistent-apps | grep -q "${name}"; then
    echo "üì≤ ${name} already on the dock"
  else
    defaults write com.apple.dock persistent-apps -array-add "<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/${name}</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>"
  fi
done

# Programming Languages
echo ""
echo "üßë‚Äçüíª Programming Languages"
if command -v rustc > /dev/null; then
  echo "ü¶Ä rust already installed"
else
  /bin/bash -c "$(curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs)" -- --no-modify-path
fi

if [[ -d "$HOME/.rubies" ]]; then
  echo "üíé Ruby already installed"
else
  ruby-install --update
  ruby-install --cleanup ruby
fi

echo ""
echo "ü§™ Random Settings"
# 1Password SSH agent
export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
while true
do
  if ssh-add -l > /dev/null; then
    echo "üîê 1Password SSH agent configured"
    break
  else
    echo "‚ùóÔ∏è Enable 1Password SSH agent, It's required moving forward"
    read -rp "Press any key to continue"
  fi
done

# Operator Mono
echo "‚úçÔ∏è  Operator Mono"
cp "$icloud_drive/Downloads/HCo_OperatorMono/OpenType/OperatorMono-Bold.otf" "$HOME/Library/Fonts/"
cp "$icloud_drive/Downloads/HCo_OperatorMono/OpenType/OperatorMono-BoldItalic.otf" "$HOME/Library/Fonts/"
cp "$icloud_drive/Downloads/HCo_OperatorMono/OpenType/OperatorMono-Medium.otf" "$HOME/Library/Fonts/"
cp "$icloud_drive/Downloads/HCo_OperatorMono/OpenType/OperatorMono-XLightItalic.otf" "$HOME/Library/Fonts/"
cp "$icloud_drive/Downloads/HCo_OperatorMono/OpenType/OperatorMono-BoldItalic.otf" "$HOME/Library/Fonts/"
cp "$icloud_drive/Downloads/HCo_OperatorMono/OpenType/OperatorMono-Light.otf" "$HOME/Library/Fonts/"
cp "$icloud_drive/Downloads/HCo_OperatorMono/OpenType/OperatorMono-MediumItalic.otf" "$HOME/Library/Fonts/"
cp "$icloud_drive/Downloads/HCo_OperatorMono/OpenType/OperatorMono-Book.otf" "$HOME/Library/Fonts/"
cp "$icloud_drive/Downloads/HCo_OperatorMono/OpenType/OperatorMono-LightItalic.otf" "$HOME/Library/Fonts/"
cp "$icloud_drive/Downloads/HCo_OperatorMono/OpenType/OperatorMono-XLight.otf" "$HOME/Library/Fonts/"

# ~/Developer
echo "üíª ~/Developer"
mkdir -p "$HOME/Developer"

# Hot Corners - https://dev.to/darrinndeal/setting-mac-hot-corners-in-the-terminal-3de
echo "‚ô®Ô∏è  Hot Corners"
defaults write com.apple.dock wvous-tl-corner -int 5 # Top Right    - Start Screen Saver
defaults write com.apple.dock wvous-tr-corner -int 2 # Top Right    - Mission Control
defaults write com.apple.dock wvous-bl-corner -int 4 # Bottom Left  - Desktop
defaults write com.apple.dock wvous-br-corner -int 0 # Bottom Right - No option

echo "ü¶Å  Safari Settings"
defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true # Show full website address
defaults write com.apple.Safari IncludeDevelopMenu -bool true            # Show Develop menu in menu bar
defaults write com.apple.Safari AutoFillPasswords -bool false            # Disable saving passwords (I use 1Password)
defaults write com.apple.Safari AutoFillCreditCardData -bool false       # Disable auto filling Credit Cards



# Vim Plugins
echo "üîå NeoVim Plugins Installed"
if [[ ! -d $HOME/.local/share/nvim/plugged ]]; then
  sh -c 'curl --fail --location --output "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

  nvim +PlugInstall +qall
fi

# Obsidian Vaults
echo ""
echo "ü™® Obsidian Vaults"
obsidian_dir="$HOME/Documents/Obsidian"
mkdir -p "$obsidian_dir"
(
  cd "$obsidian_dir"
  while read -r repo
  do
    dir_name=$(echo "$repo" | cut -d'/' -f2 | cut -d'.' -f1)
    if [[ -d "$dir_name" ]]
    then
      echo "‚úÖ $dir_name cloned"
    else
      git clone "$repo"
    fi
  done < "$icloud_drive/dotfiles-config/obsidian-vaults"
)

# Adding items to the doc and setting hot corners requires a Dock restart
killall Dock
