# Eventually macOS will remove ruby/rake from the base system. Then I will
# create a minimum shell script that just bootstraps homebrew and ruby-install
# to install ruby then run the rest of the configuration using the existing
# rake implementation.
#
# https://developer.apple.com/documentation/macos-release-notes/macos-catalina-10_15-release-notes

# TODO
# - Set DDG as safari default search

require 'fileutils'

task default: [:bootstrap]
task bootstrap: [
  :xcode, :homebrew, :git, :onepassword, :alfred, :netnewswire, :rustup, :htop,
  :nvim, :ruby, :starship, :operator_mono, :iterm2, :mas, :pocket, :obsidian,
  :dotfiles, :steam, :zoom, :bat, :jq, :whatsapp, :graphiz, :youtube_dl,
  :ripgrep, :textual
]

def pause(message)
  puts message
  puts "Press return to continue..."
  STDIN.getc
end

def do_unless(command, &block)
  unless system(command)
    block.call
  end
end

def brew_do(formula, &block)
  do_unless "brew ls --versions #{formula} &> /dev/null" do
    puts "Installing #{formula}"
    system "brew install #{formula}"

    block.call if block
  end
end

def cask_do(formula, &block)
  do_unless "brew ls --cask --versions #{formula} &> /dev/null" do
    puts "Installing #{formula}"
    system "brew install --cask #{formula}"

    block.call if block
  end
end

def mas_do(name, mas_id, &block)
  do_unless "mas list | grep -q #{mas_id} " do
    puts "Installing #{name} from the mac app store"
    system "mas install #{mas_id}"

    block.call if block
  end
end

def file_mapping_do(mapping)
  mapping.each do |source_path, dest_path|
    unless File.exist? dest_path
      if File.exist? source_path
        puts "Moving #{source_path} -> #{dest_path}"
        FileUtils.mv source_path, dest_path
      else
        pause "Place file at #{source_path}"
        redo
      end
    end
  end
end

def append(file_path, string)
  File.open(file_path, 'a') do |f|
    f.puts string
  end
end

task :xcode do
  do_unless "xcode-select -p &> /dev/null" do
    puts "Installing xcode"
    system "xcode-select --install"
    pause "Use UI to finish installation"
  end
end

task :homebrew => :xcode do
  do_unless "which -s brew" do
    puts "Installing homebrew"
    system "/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\""
    append "#{Dir.home}/.zprofile", 'eval "$(/opt/homebrew/bin/brew shellenv)"'
  end
end

task :git => :homebrew do
  brew_do "git" do
    system 'git config --global user.name "Evan Sharp"'
    system 'git config --global user.email evan@uninitialized-memory.com'
  end
end

task :onepassword => :homebrew do
  cask_do "1password" do
    system 'open -a "1Password 7"'
    pause "Sign into 1Password"
    pause "Enable 1password extension in Safari"
  end
end

task :alfred => :homebrew do
  cask_do "alfred" do
    system 'open -a "Alfred 4"'
    pause "Register Alfred and trigger with cmd double tap"
  end
end

task :netnewswire => :homebrew do
  cask_do "netnewswire" do
    system 'open -a NetNewsWire'
    pause "Deactivate On My Mac account and register Feedbin account"
  end
end

task :rustup => :homebrew do
  do_unless "which -s rustup" do
     puts "Installing rustup"
     system "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh"
     append "#{Dir.home}/.zprofile", 'source $HOME/.cargo/env'
  end 
end

task :htop => :homebrew do
  brew_do 'htop'
end

task :nvim => :homebrew do
  brew_do 'nvim'
end

task :ruby => :homebrew do
  brew_do 'ruby-install' do
    system "ruby-install ruby"
  end
end

task :starship => :homebrew do
  brew_do "starship" do
    append "#{Dir.home}/.zshrc", 'eval "$(starship init zsh)"'
  end
end

task :operator_mono do
  fonts = {
    "#{Dir.home}/Downloads/fonts/Operator Mono Bold Italic.otf" => "#{Dir.home}/Library/Fonts/Operator Mono Bold Italic.otf",
    "#{Dir.home}/Downloads/fonts/Operator Mono Bold Regular.otf" => "#{Dir.home}/Library/Fonts/Operator Mono Bold Regular.otf",
    "#{Dir.home}/Downloads/fonts/Operator Mono Book Italic.otf" => "#{Dir.home}/Library/Fonts/Operator Mono Book Italic.otf",
    "#{Dir.home}/Downloads/fonts/Operator Mono Book Regular.otf" => "#{Dir.home}/Library/Fonts/Operator Mono Book Regular.otf",
    "#{Dir.home}/Downloads/fonts/Operator Mono Light Italic.otf" => "#{Dir.home}/Library/Fonts/Operator Mono Light Italic.otf",
    "#{Dir.home}/Downloads/fonts/Operator Mono Light Regular.otf" => "#{Dir.home}/Library/Fonts/Operator Mono Light Regular.otf",
    "#{Dir.home}/Downloads/fonts/Operator Mono Medium Italic.otf" => "#{Dir.home}/Library/Fonts/Operator Mono Medium Italic.otf",
    "#{Dir.home}/Downloads/fonts/Operator Mono Medium Regular.otf" => "#{Dir.home}/Library/Fonts/Operator Mono Medium Regular.otf",
    "#{Dir.home}/Downloads/fonts/Operator Mono XLight Italic.otf" => "#{Dir.home}/Library/Fonts/Operator Mono XLight Italic.otf",
    "#{Dir.home}/Downloads/fonts/Operator Mono XLight Regular.otf" => "#{Dir.home}/Library/Fonts/Operator Mono XLight Regular.otf"
  }

  file_mapping_do fonts
end

task :ssh_keys do
  mapping = {
    "#{Dir.home}/downloads/id_rsa" => "#{Dir.home}/.ssh/id_rsa",
    "#{Dir.home}/downloads/id_rsa.pub" => "#{Dir.home}/.ssh/id_rsa.pub"
  }

  file_mapping_do mapping
end

task :iterm2 => [:homebrew, :operator_mono] do
  cask_do "iterm2" do
    system "open -a iTerm"
    pause "Set iTerm2 font to operator mono book 16pt and enable powerline glyphs in profiles > default > text"
  end
end

task :mas => :homebrew do
  brew_do "mas"
end

task :rosetta do
  unless File.exist? "/Library/Apple/usr/libexec/oah/libRosettaRuntime"
    system "/usr/sbin/softwareupdate --install-rosetta --agree-to-license"
  end
end

task :pocket => [:mas, :rosetta] do
  mas_do "Pocket", 568494494 do
    system "open -a Pocket"
    pause "Sign into Pocket"
  end
end

task :obsidian => :homebrew do
  cask_do "obsidian" do
    system 'open -a "Obsidian"'
    pause "Register Obsidian"
  end
end

task :dotfiles => [:git] do
  unless Dir.exist? "#{Dir.home}/Developer"
    require 'fileutils'
    FileUtils.mkdir "#{Dir.home}/Developer"
    system "git clone https://github.com/packetmonkey/dotfiles #{Dir.home}/Developer/dotfiles"
  end
end

task :steam => :homebrew do
  cask_do "steam" do
    system 'open -a "Steam"'
    pause "Sign into Steam"
  end
end

task :zoom => :homebrew do
  cask_do "zoom"
end

task :bat => :homebrew do
  brew_do "bat"
end

task :jq => :homebrew do
  brew_do "jq"
end

task :whatsapp => :homebrew do
  cask_do "whatsapp"
end

task :graphiz => :homebrew do
  brew_do "graphviz"
end

task :youtube_dl => :homebrew do
  brew_do "youtube-dl"
end

task :ripgrep => :homebrew do
  brew_do "ripgrep"
end

task :textual => [:mas] do
  mas_do "Textual", 1262957439
end
